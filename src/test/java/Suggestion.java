
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
import javax.swing.plaf.basic.BasicPopupMenuUI;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Abhishek
 */
public class Suggestion extends javax.swing.JFrame {

    /**
     * Creates new form Suggestion
     */
    //Connection conn = null;
    
  
    DefaultListModel model = new DefaultListModel();
    
    public Suggestion() {
        initComponents();
        menu.add(jPanel1);
        menu.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicPopupMenuUI ui;
        ui = (BasicPopupMenuUI)menu.getUI();
    }
    
    
    
    private Connection databaseconnection(){
        Connection conn ;    
        try{
           String dbURL = "jdbc:mysql://localhost:3306/app_dev";
           String user = "root";
           String password = "#@Rahul8269";
           conn = DriverManager.getConnection(dbURL, user, password);
                    return conn;
        }catch (SQLException ex) {
            System.out.print(ex);
        }
        return null;
    }
    
           ArrayList arlist = new ArrayList();
          // String str = null;
        private ArrayList aList(){
           Connection conn = databaseconnection();
            try {
                String all;
//           String dbURL = "jdbc:mysql://localhost:3306/app_dev";
//           String user = "root";
//           String password = "#@Rahul8269";
//           conn = DriverManager.getConnection(dbURL, user, password);
            Statement st = conn.createStatement();
            String sql = "SELECT * FROM app_dev.cust_info";
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                String nm = rs.getString("name");
                String id = rs.getString(1);
                String mobno = rs.getString(3);
                if(mobno.isEmpty()){
                    String str= id+"    "+nm;
                    all=str;
                }
                else{
                    String str= id+"    "+nm+"      "+mobno;
                    all=str;
                }
                // str = rs.getString(1);
               arlist.add(all);
                model.addElement(all);
                System.out.println(all);
                
            }
            return arlist;
        } catch (SQLException ex) {
            Logger.getLogger(Suggestion.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
//        private String searchQuery(String search){
//        try {
//            Connection conn = databaseconnection();
//            String str = null;
//            Statement st = conn.createStatement();
//            String sql = "SELECT name FROM app_dev.cust_info where name like 'search%'";
//            ResultSet rs = st.executeQuery(sql);
//            while(rs.next()){
//                str=rs.getString(1);
//                System.out.println(str);
//            }
//            
//        } catch (SQLException ex) {
//            Logger.getLogger(Suggestion.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return str;
//        }
        
        
    private void bindData(){
        aList().stream().forEach((arlist)->{
            model.addElement(arlist);
        } );
        list.setModel(model);
        list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }
    
    private void searchFilter(String search){
        DefaultListModel filteredsearch = new DefaultListModel();
        ArrayList flist = aList();
        flist.stream().forEach((arlist)->{
            String listitem =arlist.toString().toLowerCase();
            if(listitem.contains(search.toLowerCase())){
                filteredsearch.addElement(arlist);
            }
        });
        model=filteredsearch ;
        list.setModel(model);
        arlist.removeAll(arlist); 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        menu = new javax.swing.JPopupMenu();
        txt = new javax.swing.JTextField();

        jScrollPane1.setViewportView(list);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(230, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeyReleased
        String search  = txt.getText().trim();
        if(!search.equals("")){
            //System.out.println(search);
            menu.show(txt,0,txt.getHeight());
            searchFilter(txt.getText());
            //txt.setCursor();
            txt.requestFocus();
            //searchQuery(txt.getText());
            System.out.println(arlist);
        }
    }//GEN-LAST:event_txtKeyReleased
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Suggestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Suggestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Suggestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Suggestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Suggestion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list;
    private javax.swing.JPopupMenu menu;
    private javax.swing.JTextField txt;
    // End of variables declaration//GEN-END:variables
}
